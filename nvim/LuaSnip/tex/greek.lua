-- GREEK ALPHABET
local ls = require("luasnip")
local s = ls.snippet
local tsutils = require "config.tsutils"
--ls.config.setup({enable_autosnippets = true})
local autosnippet = ls.extend_decorator.apply(s, { snippetType = "autosnippet" })

return {
  s( { trig = ";a", snippetType = "autosnippet"}, { t("\\alpha") } ),
  --s( { trig = ";a", snippetType = "autosnippet"}, 
  --{ t("\\alpha") }, { condition = tsutils.in_mathzone } ),

  s( { trig = ";g", snippetType = "autosnippet" }, { t("\\gamma") } ),
  s( { trig = ";b", snippetType = "autosnippet" }, { t("\\beta") } ),
  s( { trig = ";d", snippetType = "autosnippet" }, { t("\\delta") } ),
  s( { trig = ";eps", snippetType = "autosnippet" }, { t("\\epsilon") } ),
  s( { trig = ";veps", snippetType = "autosnippet" }, { t("\\varepsilon") } ),
  s( { trig = ";z", snippetType = "autosnippet" }, { t("\\zeta") } ),
  s( { trig = ";eta", snippetType = "autosnippet" }, { t("\\eta") } ),
  s( { trig = ";th", snippetType = "autosnippet" }, { t("\\theta") } ),
  s( { trig = ";vth", snippetType = "autosnippet" }, { t("\\vartheta") } ),
  s( { trig = ";i", snippetType = "autosnippet" }, { t("\\iota") } ),
  s( { trig = ";k", snippetType = "autosnippet" }, { t("\\kappa") } ),
  s( { trig = ";l", snippetType = "autosnippet" }, { t("\\lambda") } ),
  s( { trig = ";vl", snippetType = "autosnippet" }, { t("\\ell") } ),
  s( { trig = ";n", snippetType = "autosnippet" }, { t("\\nu") } ),
  s( { trig = ";m", snippetType = "autosnippet" }, { t("\\mu") } ),
  s( { trig = ";x", snippetType = "autosnippet" }, { t("\\xi") } ),
  s( { trig = ";pi", snippetType = "autosnippet" }, { t("\\pi") } ),
  s( { trig = ";f", snippetType = "autosnippet" }, { t("\\phi") } ),
  s( { trig = ";vf", snippetType = "autosnippet" }, { t("\\varphi") } ),
  s( { trig = ";r", snippetType = "autosnippet" }, { t("\\rho") } ),
  s( { trig = ";s", snippetType = "autosnippet" }, { t("\\sigma") } ),
  s( { trig = ";t", snippetType = "autosnippet" }, { t("\\tau") } ),
  s( { trig = ";u", snippetType = "autosnippet" }, { t("\\upsilon") } ),
  s( { trig = ";F", snippetType = "autosnippet" }, { t("\\Phi") } ),
  s( { trig = ";G", snippetType = "autosnippet" }, { t("\\Gamma") } ),
  s( { trig = ";c", snippetType = "autosnippet" }, { t("\\chi") } ),
  s( { trig = ";psi", snippetType = "autosnippet" }, { t("\\psi") } ),
  s( { trig = ";o", snippetType = "autosnippet" }, { t("\\omega") } ),
  s( { trig = ";D", snippetType = "autosnippet" }, { t("\\Delta") } ),
  s( { trig = ";T", snippetType = "autosnippet" }, { t("\\Theta") } ),
  s( { trig = ";L", snippetType = "autosnippet" }, { t("\\Lambda") } ),
  s( { trig = ";X", snippetType = "autosnippet" }, { t("\\Xi") } ),
  s( { trig = ";P", snippetType = "autosnippet" }, { t("\\Pi") } ),
  s( { trig = ";vr", snippetType = "autosnippet" }, { t("\\varrho") } ),
  s( { trig = ";S", snippetType = "autosnippet" }, { t("\\Sigma") } ),
  s( { trig = ";U", snippetType = "autosnippet" }, { t("\\Upsilon") } ),
  s( { trig = ";Psi", snippetType = "autosnippet" }, { t("\\Psi") } ),
  s( { trig = ";O", snippetType = "autosnippet" }, { t("\\Omega") } ), 

  -- GREEK ALPHABET - w/ automatic math environment

  s( { trig = "\\alpha" }, { t("$\\alpha$ ") } ),
  s( { trig = "\\beta" }, { t("$\\beta$ ") } ),
  s( { trig = "\\gamma" }, { t("$\\gamma$ ") } ),
  s( { trig = "\\delta" }, { t("$\\delta$ ") } ),
  s( { trig = "\\epsilonps" }, { t("$\\epsilon$ ") } ),
  s( { trig = "\\zeta" }, { t("$\\zeta$ ") } ),
  s( { trig = "\\etata" }, { t("$\\eta$ ") } ),
  s( { trig = "\\thetah" }, { t("$\\theta$ ") } ),
  s( { trig = "\\iota" }, { t("$\\iota$ ") } ),
  s( { trig = "\\kappa" }, { t("$\\kappa$ ") } ),
  s( { trig = "\\lambda" }, { t("$\\lambda$ ") } ),
  s( { trig = "\\ell" }, { t("$\\ell$ ") } ),
  s( { trig = "\\nu" }, { t("$\\nu$ ") } ),
  s( { trig = "\\mu" }, { t("$\\mu$ ") } ),
  s( { trig = "\\xi" }, { t("$\\xi$ ") } ),
  s( { trig = "\\pii" }, { t("$\\pi$ ") } ),
  s( { trig = "\\phi" }, { t("$\\phi$ ") } ),
  s( { trig = "\\rho" }, { t("$\\rho$ ") } ),
  s( { trig = "\\sigma" }, { t("$\\sigma$ ") } ),
  s( { trig = "\\tau" }, { t("$\\tau$ ") } ),
  s( { trig = "\\upsilon" }, { t("$\\upsilon$ ") } ),
  s( { trig = "\\Phi" }, { t("$\\Phi$ ") } ),
  s( { trig = "\\Gamma" }, { t("$\\Gamma$ ") } ),
  s( { trig = "\\chi" }, { t("$\\chi$ ") } ),
  s( { trig = "\\psisi" }, { t("$\\psi$ ") } ),
  s( { trig = "\\omega" }, { t("$\\omega$ ") } ),
  s( { trig = "\\Delta" }, { t("$\\Delta$ ") } ),
  s( { trig = "\\varepsilon" }, { t("$\\varepsilon$ ") } ),
  s( { trig = "\\vartheta" }, { t("$\\vartheta$ ") } ),
  s( { trig = "\\Theta" }, { t("$\\Theta$ ") } ),
  s( { trig = "\\Lambda" }, { t("$\\Lambda$ ") } ),
  s( { trig = "\\Xi" }, { t("$\\Xi$ ") } ),
  s( { trig = "\\Pi" }, { t("$\\Pi$ ") } ),
  s( { trig = "\\varrho" }, { t("$\\varrho$ ") } ),
  s( { trig = "\\Sigma" }, { t("$\\Sigma$ ") } ),
  s( { trig = "\\Upsilon" }, { t("$\\Upsilon$ ") } ),
  s( { trig = "\\varphi" }, { t("$\\varphi$ ") } ),
  s( { trig = "\\Psisi" }, { t("$\\Psi$ ") } ),
  s( { trig = "\\Omega" }, { t("$\\Omega$ ") } ),
}
