##########
# GLOBAL #
##########

global !p

def create_table(snip):
	rows = snip.buffer[snip.line].split('x')[0]
	cols = snip.buffer[snip.line].split('x')[1]
	int_val = lambda string: int(''.join(s for s in string if s.isdigit()))
	rows = int_val(rows)
	cols = int_val(cols)
	offset = cols + 1
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]
	snip.buffer[snip.line] = ''
	final_str = old_spacing + "\\begin{tabular}{|" + "|".join(['$' + str(i + 1) for i in range(cols)]) + "|}\n"
	for i in range(rows):
		final_str += old_spacing + '\t'
		final_str += " & ".join(['${' + str(i * cols + j + offset) + ':a_{' +str(i) + str(j) + '}}'for j in range(cols)])
		final_str += " \\\\\\\n"
	final_str += old_spacing + "\\end{tabular}\n$0"
	snip.expand_anon(final_str)
												
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def add_row(snip):
	row_len = int(''.join(s for s in snip.buffer[snip.line] if s.isdigit()))
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]
	snip.buffer[snip.line] = ''
	final_str = old_spacing
	final_str += " & ".join(['$' + str(j + 1) for j in range(row_len)])
	final_str += " \\\\\\"
	snip.expand_anon(final_str)
def create_matrix_placeholders(snip):
	# Create anonymous snippet body
	anon_snippet_body = ""

	# Get start and end line number of expanded snippet
	start = snip.snippet_start[0]
	end = snip.snippet_end[0]

  # Append current line into anonymous snippet
	for i in range(start, end + 1):
		anon_snippet_body += snip.buffer[i]
		anon_snippet_body += "" if i == end else "\n"

	# Delete expanded snippet line till second to last line
	for i in range(start, end):
		del snip.buffer[start]

	# Empty last expanded snippet line while preserving the line
	snip.buffer[start] = ''

	# Expand anonymous snippet
	snip.expand_anon(anon_snippet_body)

def create_matrix(cols, rows, sep, start, end):
	res = ""
	placeholder = 1
	for _ in range(0, int(rows)):
		res += start + f"${placeholder} "
		placeholder += 1
		for _ in range(0, int(cols) - 1):
			res += sep + f" ${placeholder} "
			placeholder += 1
		res += end
	return res[:-1]
endglobal


###############
# ENVIRONMENT #
###############

snippet beg "begin{} / end{}" bi
\begin{$1}
	${0:${VISUAL}}
\end{$1}
endsnippet

snippet cnt "Center" bi
\begin{center}
	${0:${VISUAL}}
\end{center}
endsnippet

snippet desc "Description" bi
\begin{description}
	\item[${1:${VISUAL}}] $0
\end{description}
endsnippet

snippet lemma "Lemma" bi
\begin{lemma}
	${0:${VISUAL}}
\end{lemma}
endsnippet

snippet prop "Proposition" bi
\begin{prop}[$1]
	${0:${VISUAL}}
\end{prop}
endsnippet

snippet thrm "Theorem" bi
\begin{theorem}[$1]
	${0:${VISUAL}}
\end{theorem}
endsnippet

snippet post "postulate" bi
\begin{postulate}[$1]
	${0:${VISUAL}}
\end{postulate}
endsnippet

snippet prf "Proof" bi
\begin{myproof}[$1]
	${0:${VISUAL}}
\end{myproof}
endsnippet

snippet def "Definition" bi
\begin{definition}[$1]
	${0:${VISUAL}}
\end{definition}
endsnippet

snippet nte "Note" bi
\begin{note}[$1]
	${0:${VISUAL}}
\end{note}
endsnippet

snippet prob "Problem" bi
\begin{problem}[$1]
	${0:${VISUAL}}
\end{problem}
endsnippet

snippet corl "Corollary" bi
\begin{corollary}[$1]
	${0:${VISUAL}}
\end{corollary}
endsnippet

snippet example "Example" bi
\begin{example}[$1]
	${0:${VISUAL}}
\end{example}
endsnippet

snippet notion "Notation" bi
\begin{notation}[$1]
	$0${VISUAL}
\end{notation}
endsnippet

snippet conc "Conclusion" bi
\begin{conclusion}[$1]
	$0${VISUAL}
\end{conclusion}
endsnippet

snippet fig "Figure environment" bi
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}} }
\end{figure}
endsnippet

snippet enum "Enumerate" bi
\begin{enumerate}
	\item ${0:${VISUAL}}
\end{enumerate}
endsnippet

snippet item "Itemize" bi
\begin{itemize}
	\item ${0:${VISUAL}}
\end{itemize}
endsnippet

snippet case "cases" bi
\begin{cases}
	${0:${VISUAL}}
\end{cases}
endsnippet

snippet abs "abstract environment" b
\begin{abstract}
	${0:${VISUAL}}
.\end{abstract}
endsnippet

snippet tab "tabular / array environment" b
\begin{${1:t}${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${2:c}}
$0${2/(?<=.)(c|l|r)|./(?1: & )/g}
\end{$1${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}

	\begin{${4:t}${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${5:c}}
		$0${5/(?<=.)(c|l|r)|./(?1: & )/g}
	\end{$4${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
\end{table}
endsnippet


########
# MATH #
########

snippet cc "subset" w
\subset 
endsnippet

snippet inn "in " w
\in 
endsnippet

snippet Nn "cap" w
\cap 
endsnippet

snippet UU "cup" w
\cup 
endsnippet

snippet uuu "bigcup" w
\bigcup_{${1:i \in ${2: I}} } $0
endsnippet

snippet nnn "bigcap" w
\bigcap_{${1:i \in ${2: I} }} $0
endsnippet


snippet HH "H" w
\mathbb{H}
endsnippet

snippet DD "D" w
\mathbb{D}
endsnippet


snippet inmath "Inline Math" w
\\(${1}\\) $0
endsnippet

snippet dm "Display Math" w
\[
  ${1:${VISUAL}}
\]$0
endsnippet


snippet frac "Fraction" w
\frac{$1}{$2}$0
endsnippet

snippet ^^ "Super Script" Ai
^{$1}$0
endsnippet

snippet __ "subscript" Ai
_{$1}$0
endsnippet

snippet srt "Square Root" wi
\sqrt{${1:${VISUAL} }}$0
endsnippet

snippet srto "... Root" wi
\sqrt[$1]{${2:${VISUAL} }}$0
endsnippet


snippet tbf "Bold" wi
\textbf{${1:${VISUAL}} }$0
endsnippet

snippet tit "Italic" wi
\textit{${1:${VISUAL}} }$0
endsnippet

snippet tun "Underline" wi
\underline{${1:${VISUAL}} }$0
endsnippet


snippet mbf "Bold math" wi
\mathbf{${1:${VISUAL}} }$0
endsnippet

snippet mit "Italic math" wi
mtextit{${1:${VISUAL}} }$0
endsnippet

snippet mun "Underline math" wi
\underline{${1:${VISUAL}} }$0
endsnippet


snippet rm "Text" wi
\rm{${1:${VISUAL}} }$0
endsnippet

snippet itm "Item" wi
\item ${0:${VISUAL}}
endsnippet

snippet ceil "Ceil" w
\left\lceil $1 \right\rceil $0
endsnippet

snippet floor "Floor" w
\left\lfloor $1 \right\rfloor$0
endsnippet

snippet pmat "Pmatrix" w
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

snippet bmat "Bmatrix" w
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet


snippet () "Left( right)" w
\left( ${1:${VISUAL}} \right)$0
endsnippet

snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right)$0
endsnippet

snippet lr( "left( right)" Ai
\left( ${1:${VISUAL}} \right)$0
endsnippet

snippet lr| "left| right|" Ai
\left| ${1:${VISUAL}} \right|$0
endsnippet

snippet lr{ "left\{ right\}" Ai
\left\\{ ${1:${VISUAL}} \right\\}$0
endsnippet

snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\}$0
endsnippet

snippet lr[ "left[ right]" Ai
\left[ ${1:${VISUAL}} \right]$0
endsnippet

snippet lra "leftangle rightangle" wi
\left<${1:${VISUAL}} \right>$0
endsnippet


snippet conj "conjugate" w
\overline{$1}$0
endsnippet


snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}} }^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet


snippet ddx "d/dx" Aw
\frac{\mathrm{d} ${1:V}}{\mathrm{d} ${2:x}} $0
endsnippet

snippet pddx "partial d/dx" Aw
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet


snippet ooo "\infty" wA
\infty
endsnippet


snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet


snippet iff "iff" Aw
\iff
endsnippet


snippet == "Equals" w
&= $1 \\\\
endsnippet


snippet != "Not Equal" wA
\neq 
endsnippet


snippet =< "leq" w
\le 
endsnippet


snippet >= "geq" wA
\ge 
endsnippet

snippet << "ll" wA
\ll
endsnippet

snippet >> "gg" w
\gg
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

snippet lll "l" w
\ell
endsnippet


snippet . "dot product" w
\cdot 
endsnippet

snippet * "dot product" w
\star 
endsnippet

snippet xx "cross product" Aw
\times 
endsnippet


snippet dot "dot" Aw
\dot{$1} $0
endsnippet


snippet ddot "dot" Aw
\ddot{$1} $0
endsnippet

snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rw
\\`!p snip.rv = match.group(1)`
endsnippet

snippet <! "normal" Aw
\triangleleft 
endsnippet

snippet "((\d|\w)+)invs" "inverse" Awr
`!p snip.rv = match.group(1)`^{-1}
endsnippet

snippet !> "mapsto" Aw
\mapsto 
endsnippet


##########
# TABLES #
#########


pre_expand "create_table(snip)"
snippet "gentbl(\d+)x(\d+)" "Generate table of *width* by *height*" r
endsnippet

pre_expand "add_row(snip)"
snippet "tr(\d+)" "Add table row of dimension ..." r
endsnippet


###########
# POSTFIX #
###########


snippet bar "bar" wi
\bar{${1:${VISUAL} }}$0
endsnippet

snippet "\<(.*?)\|" "bra" wri
\bra{`!p snip.rv = match.group(1).replace('q', f'\psi').replace('f', f'\phi')`}
endsnippet

snippet "\|(.*?)\>" "ket" wri
\ket{`!p snip.rv = match.group(1).replace('q', f'\psi').replace('f', f'\phi')`}
endsnippet

snippet "(.*)\\bra{(.*?)}([^\|]*?)\>" "braket" Awri
`!p snip.rv = match.group(1)`\braket{`!p snip.rv = match.group(2)`}{`!p snip.rv = match.group(3).replace('q', f'\psi').replace('f', f'\phi')`}
endsnippet


#############
# PRE-AMBLE #
#############



snippet pac "usepackage - removes square braces if options removed" b
\usepackage`!p snip.rv='[' if t[1] else ""`${1:options}`!p snip.rv = ']' if t[1] else ""`{${2:package}}$0
endsnippet

snippet docls "Document Class" bA
\documentclass{$1}$0
endsnippet


#########
# OTHER #
#########



snippet acl "Acroynm expanded" bi
\acl{${1:acronym}}
endsnippet

snippet ac "Acroynm normal" bi
\ac{${1:acronym}}
endsnippet

snippet ni "Non-indented paragraph" bi
\noindent
endsnippet



############
# SECTIONS #
############



snippet chap "Chapter" wi
\chapter{$1${VISUAL}}
endsnippet

snippet sec "Section" wi
\section{$1${VISUAL}}
endsnippet

snippet sec* "Section*" wi
\section*{$1${VISUAL}}
endsnippet

snippet sub "Subsection" wi
\subsection{$1${VISUAL}}
endsnippet

snippet sub* "Subsection*" wi
\subsection*{$1${VISUAL}}
endsnippet

snippet subsub "Subsection" wi
\subsubsection{$1${VISUAL}}
endsnippet

snippet subsub* "Subsubsection" wi
\subsubsection*{$1${VISUAL}}
endsnippet

snippet par "Paragraph" wi
\paragraph{$1${VISUAL}}
endsnippet

snippet par* "Paragraph*" wi
\paragraph*{$1${VISUAL}}
endsnippet

snippet subpar "Sub Paragraph" wi
\subparagraph{$1${VISUAL}}
endsnippet

snippet subpar* "Sub Paragraph*" wi
\subparagraph*{$1${VISUAL}}
endsnippet

snippet chapl "Chapter with label" wi
\chapter{$1${VISUAL}}
\label{cha:${2:${1/\W+/-/g} }}
endsnippet

snippet secl "Section with label" wi
\section{$1${VISUAL}}
\label{sec:${2:${1/\W+/-/g} }}
endsnippet

snippet sec*l "Section* with label" wi
\section*{$1${VISUAL}}
\label{sec:${2:${1/\W+/-/g} }}
endsnippet

snippet subl "Subsection with label" wi
\subsection{$1${VISUAL}}
\label{sub:${2:${1/\W+/-/g} }}
endsnippet

snippet sub*l "Subsection* with label" wi
\subsection*{$1${VISUAL}}
\label{sub:${2:${1/\W+/-/g} }}
endsnippet

snippet subsubl "Subsection with label" wi
\subsubsection{$1${VISUAL}}
\label{ssub:${2:${1/\W+/-/g} }}
endsnippet

snippet subsub*l "Subsubsection with label" wi
\subsubsection*{$1${VISUAL}}
\label{ssub:${2:${1/\W+/-/g} }}
endsnippet

snippet parl "Paragraph with label" wi
\paragraph{$1${VISUAL}}
\label{par:${2:${1/\W+/-/g} }}
endsnippet

snippet par*l "Paragraph* with label" wi
\paragraph*{$1${VISUAL}}
\label{par:${2:${1/\W+/-/g} }}
endsnippet

snippet subparl "Sub Paragraph with label" wi
\subparagraph{$1${VISUAL}}
\label{subp:${2:${1/\W+/-/g} }}
endsnippet

snippet subpar*l "Sub Paragraph* with label" wi
\subparagraph*{$1${VISUAL}}
\label{subp:${2:${1/\W+/-/g} }}
endsnippet


##########################
#GILLES CASTEL'S SNIPPETS#
##########################

snippet beg "begin{} / end{}" bA
\begin{$1}
	$0
\end{$1}
endsnippet

snippet %box "Box"
`!p snip.rv = '%┌' + '─' * (len(t[1]) + 2) + '┐'`
%│ $1 │
`!p snip.rv = '%└' + '─' * (len(t[1]) + 2) + '┘'`
$0
endsnippet

snippet mk "Math" wA
$ ${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet tt "text" w
\text{$1} $0
endsnippet

#snippet '([A-Za-z])(\d)' "auto subscript" wrA
#`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
#endsnippet
#
#snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
#`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
#endsnippet


snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wr
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

snippet inf "infinity" w
\infty
endsnippet

snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet


###############
###INTEGRALS###
###############

priority 300
snippet dint "integral" wA
\int ${1:${VISUAL}} \, \mathrm{d} ${2:x} $0
endsnippet

priority 300
snippet cint "integral" wA
\oint\limits_{${1:\Gamma}} ${2:${VISUAL}} \, \mathrm{d} ${2:\gamma} $0
endsnippet

priority 300
snippet ddint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} \, \mathrm{d} ${4:x}  $0
endsnippet


################
#GREEK ALPHABET#
################


snippet a "alpha" w
\alpha
endsnippet

snippet g "gamma" w
\gamma
endsnippet

snippet b "beta" w
\beta
endsnippet

snippet d "delta" w
\delta
endsnippet

snippet eps "epsilon" w
\epsilon
endsnippet

snippet z "zeta" w
\zeta
endsnippet

snippet eta "eta" w
\eta
endsnippet

snippet th "theta" w
\theta
endsnippet

snippet i "iota" w
\iota
endsnippet

snippet k "kappa" w
\kappa
endsnippet

snippet l "lambda" w
\lambda
endsnippet

snippet vl "ell" w
\ell
endsnippet

snippet n "nu" w
\nu
endsnippet

snippet m "mu" w
\mu
endsnippet

snippet x "xi" w
\xi
endsnippet

snippet pi "pi" w
\pi
endsnippet

snippet f "phi" w
\phi
endsnippet

snippet r "rho" w
\rho
endsnippet

snippet s "sigma" w
\sigma
endsnippet

snippet t "tau" w
\tau
endsnippet

snippet u "upsilon" w
\upsilon
endsnippet

snippet F "Phi" w
\Phi
endsnippet

snippet G "Gamma" w
\Gamma
endsnippet

snippet c "chi" w
\chi
endsnippet

snippet psi "psi" w
\psi
endsnippet

snippet o "omega" w
\omega
endsnippet

snippet D "Delta" w
\Delta
endsnippet

snippet veps "varepsilon" w
\varepsilon
endsnippet

snippet vth "vartheta" w
\vartheta
endsnippet

snippet T "Theta" w
\Theta
endsnippet

snippet L "Lambda" w
\Lambda
endsnippet

snippet X "Xi" w
\Xi
endsnippet

snippet P "Pi" w
\Pi
endsnippet

snippet vr "varrho" w
\varrho
endsnippet

snippet S "Sigma" w
\Sigma
endsnippet

snippet U "Upsilon" w
\Upsilon
endsnippet

snippet vf "varphi" w
\varphi
endsnippet

snippet Psi "Psi" w
\Psi
endsnippet

snippet O "Omega" w
\Omega
endsnippet

# GREEK ALPHABET - w/ automatic math environment
snippet \alpha "math alpha" w
$\alpha$ 
endsnippet

snippet \beta "math beta" w
$\beta$ 
endsnippet

snippet \gamma "math gamma" w
$\gamma$ 
endsnippet

snippet \delta "math delta" w
$\delta$ 
endsnippet

snippet \epsilonps "math epsilon" w
$\epsilon$ 
endsnippet

snippet \zeta "math zeta" w
$\zeta$ 
endsnippet

snippet \etata "math eta" w
$\eta$ 
endsnippet

snippet \thetah "math theta" w
$\theta$ 
endsnippet

snippet \iota "math iota" w
$\iota$ 
endsnippet

snippet \kappa "math kappa" w
$\kappa$ 
endsnippet

snippet \lambda "math lambda" w
$\lambda$ 
endsnippet

snippet \ell "math ell" w
$\ell$ 
endsnippet

snippet \nu "math nu" w
$\nu$ 
endsnippet

snippet \mu "math mu" w
$\mu$ 
endsnippet

snippet \xi "math xi" w
$\xi$ 
endsnippet

snippet \pii "math pi" w
$\pi$ 
endsnippet

snippet \phi "math phi" w
$\phi$ 
endsnippet

snippet \rho "math rho" w
$\rho$ 
endsnippet

snippet \sigma "math sigma" w
$\sigma$ 
endsnippet

snippet \tau "math tau" w
$\tau$ 
endsnippet

snippet \upsilon "math upsilon" w
$\upsilon$ 
endsnippet

snippet \Phi "math Phi" w
$\Phi$ 
endsnippet

snippet \Gamma "math Gamma" w
$\Gamma$ 
endsnippet

snippet \chi "math chi" w
$\chi$ 
endsnippet

snippet \psisi "math psi" w
$\psi$ 
endsnippet

snippet \omega "math omega" w
$\omega$ 
endsnippet

snippet \Delta "math Delta" w
$\Delta$ 
endsnippet

snippet \varepsilon "math varepsilon" w
$\varepsilon$ 
endsnippet

snippet \vartheta "math vartheta" w
$\vartheta$ 
endsnippet

snippet \Theta "math Theta" w
$\Theta$ 
endsnippet

snippet \Lambda "math Lambda" w
$\Lambda$ 
endsnippet

snippet \Xi "math Xi" w
$\Xi$ 
endsnippet

snippet \Pi "math Pi" w
$\Pi$ 
endsnippet

snippet \varrho "math varrho" w
$\varrho$ 
endsnippet

snippet \Sigma "math Sigma" w
$\Sigma$ 
endsnippet

snippet \Upsilon "math Upsilon" w
$\Upsilon$ 
endsnippet

snippet \varphi "math varphi" w
$\varphi$ 
endsnippet

snippet \Psisi "math Psi" w
$\Psi$ 
endsnippet

snippet \Omega "math Omega" w
$\Omega$ 
endsnippet


##################
#VASILII SNIPPETS#
##################

snippet time "Current Time" w
`date +%H:%M`
endsnippet

# note.sh environments 
snippet gnote "Green note" bA
\note{green}{$1 at `date +%H:%M`}.
%{{{
$2
%}}}
$0
endsnippet

snippet bnote "Blue note" bA
\note{blue}{$1 at `date +%H:%M`}.
%{{{
$2
%}}}
$0
endsnippet

snippet rnote "Red note" bA
\note{red}{$1 at `date +%H:%M`}.
%{{{
$2
%}}}
$0
endsnippet

snippet knote "Black note" bA
\note{black}{$1 at `date +%H:%M`}.
%{{{
$2
%}}}
$0
endsnippet

snippet meet "Meeting note" bA
\note{purple}{{\large Meeting with $1 at `date +%H:%M`}}.
%{{{
$2
%}}}
$0
endsnippet

snippet idea "Idea" bA
\note{teal}{$1}.
%{{{
$2
%}}}
$0
endsnippet

snippet BBsem "Black Board Seminar" bA
\note{olive}{{\large BB Seminar at `date +%H:%M`}}.
%{{{
$1
%}}}
$0
endsnippet

snippet sem "Seminar" bA
\note{lime}{{\large ${1:Seminar} at `date +%H:%M`}}.
%{{{
$2
%}}}
$0
endsnippet


snippet niagara "Address of files on Niagara" w
vasissua@niagara.scinet.utoronto.ca:/scratch/m/murray/vasissua
endsnippet

snippet path "Filepath" w
\href{run:$1}{Location}
endsnippet

snippet url "url" w
\url{$1}
endsnippet

snippet VV "checkmark" w
{\textcolor{green}{\checkmark}} 
endsnippet

snippet XX "anti-checkmark (red x)" w
{\textcolor{red}{X}} 
endsnippet

snippet neur "Neural" w
<c-o>:ls
endsnippet


# Fonts
snippet mbb "number sets like reals, complex" wA
\mathbb{$1}$0
endsnippet

snippet mcal "curly variable" wA
\mathcal{$1}$0
endsnippet

snippet mfk "edgy font" wA
\mathfrak{$1}$0
endsnippet


# Character modifiers 
snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
\vec{`!p snip.rv=match.group(1)`} 
endsnippet

snippet "(\\?\w+)(\.h)" "Hat postfix" riA
\hat{`!p snip.rv=match.group(1)`} 
endsnippet

snippet "(\\?\w+)(\.t)" "Tilde postfix" riA
\tilde{`!p snip.rv=match.group(1)`} 
endsnippet

snippet "(\\?\w+)(\.b)" "Bar postfix" riA
\bar{`!p snip.rv=match.group(1)`} 
endsnippet

snippet h "hat" w
\hat{$1}$0
endsnippet

snippet v "vector" w
\Vec{$1}$0
endsnippet

snippet ol "overline" w
\overline{$1}$0
endsnippet

snippet ul "underline" w
\underline{$1}$0
endsnippet


# Math 
snippet =- "Equiv" wA
\equiv 
endsnippet

snippet ~ "Similar" w
\sim 
endsnippet

snippet \sim "Approx" w
\approx 
endsnippet

snippet =~ "Simeq" wA
\simeq 
endsnippet

snippet \simeq "Strong eq + sim" w
\cong
endsnippet

snippet o+ "oplus" w
\oplus
endsnippet

snippet ox "nothing, no answer" w
\varnothing
endsnippet

snippet \varnothing "otimes" w
\otimes
endsnippet


snippet /~ "Similar in text" w
$ \sim $1 $ $0
endsnippet

snippet o< "proportional" wA
\propto 
endsnippet

snippet pl "Parallel" i
\parallel
endsnippet

snippet pp "Perpendicular" i
\bot
endsnippet

snippet nabl "nabla" wA
\nabla 
endsnippet

snippet vnabl "vector nabla" wA
\Vec{\nabla} 
endsnippet

# Automatic arrow builder 
snippet -> "right arrow" wA
\rightarrow
endsnippet

snippet => "Right arrow" wA
\Rightarrow
endsnippet

snippet ==> "Right long arrow" Aw
\implies
endsnippet

snippet <- "left arrow" wA
\leftarrow
endsnippet

snippet \leftarrow> "left right arrow" wA
\leftrightarrow
endsnippet

snippet <= "Left arrow" wA
\Leftarrow
endsnippet

snippet \Leftarrow> "Left right arrow" wA
\Leftrightarrow
endsnippet

snippet \Leftarrow= "Left long arrow" wA
\impliedby
endsnippet

snippet \impliedby> "Left right long arrow (iff)" wA
\iff
endsnippet

# Automatic arrow builder - math
snippet \rightarrow "math right arrow" w
$\rightarrow$ 
endsnippet

snippet \Rightarrow "math Right arrow" w
$\Rightarrow$ 
endsnippet

snippet \implies "math Right long arrow" A
$\implies$ 
endsnippet

snippet \leftarrow "math left arrow" w
$\leftarrow$ 
endsnippet

snippet \leftrightarrow "math left right arrow" w
$\leftrightarrow$ 
endsnippet

snippet \Leftarrow "math Left arrow" w
$\Leftarrow$ 
endsnippet

snippet \Leftrightarrow "math Left right arrow" w
$\Leftrightarrow$ 
endsnippet

snippet \impliedby "math Left long arrow" w
$\impliedby$ 
endsnippet

snippet \iffmpliedby "math Left right long arrow (iff)" w
$\iff$ 
endsnippet


# Astrophysics 
snippet H2 "H_2" w
H$_2$ 
endsnippet

snippet lcdm "Lambda-CDM" wA
$\Lambda$CDM 
endsnippet

snippet red~ "redshfit" wA
redshift $z \sim $1$ $0
endsnippet

snippet red> "redshfit" wA
redshift $z > $1$ $0
endsnippet

snippet red< "redshfit" wA
redshift $z < $1$ $0
endsnippet

snippet red= "redshfit" wA
redshift $z = $1$ $0
endsnippet

snippet Lya "Lyman-alpha" wA
Lyman-$\alpha$ $0
endsnippet

snippet Msun "Solar mass" wA
M_\odot 
endsnippet


# Formatting 
priority 300
snippet verb "verbatim environment" bA
\begin{verbatim}
${0:${VISUAL}}
\end{verbatim}
endsnippet

snippet lstl "lstlisting (same as verbatim)" bi
\begin{lstlisting}
${0:${VISUAL}}
\end{lstlisting}
endsnippet

# Formatting: Inline verbatim environment 
# veve is just fast to type, and hard to accidentally confuse with other words
priority 100
snippet (veve "verbatim environment 1" wA 
\verb|${0:${VISUAL}}|
endsnippet
priority 100
snippet veev "verbatim environment 2" wA 
\verb|${0:${VISUAL}}|
endsnippet
priority 100
snippet evve "verbatim environment 3" wA 
\verb|${0:${VISUAL}}|
endsnippet
priority 100
snippet evev "verbatim environment 4" wA 
\verb|${0:${VISUAL}}|
endsnippet


snippet cas[ "cases []" biA
\begin{equation}
\left[
\begin{aligned}
	${0:${VISUAL}}
\end{aligned}
\right.
\end{equation}
endsnippet

snippet cas{ "cases {}" biA
\begin{equation}
\left\{
\begin{aligned}
	${0:${VISUAL}}
\end{aligned}
\right.
\end{equation}
endsnippet

snippet cas( "cases ()" biA
\begin{equation}
\left(
\begin{aligned}
	${0:${VISUAL}}
\end{aligned}
\right.
\end{equation}
endsnippet


snippet 1st "1st" wA
1$^\text{st}$ 
endsnippet

snippet 2nd "2nd" wA
2$^\text{nd}$ 
endsnippet

snippet 3rd "3rd" wA
3$^\text{rd}$ 
endsnippet

# This ordinal (general nth) doesn't work!
snippet "`(\d+)(st|nd|rd|th)`" "General ordinal" r
$1$^\text{$2}$
endsnippet


# Matrix generator 
post_jump "create_matrix_placeholders(snip)"
snippet 'mx-(\d+)-(\d+)' "LaTeX array" br
\begin{pmatrix}{`!p
orient = ""
for _ in range(0, int(match.group(1))): orient += "l"
snip.rv = orient`}
`!p
snip.rv = create_matrix(match.group(1), match.group(2), "&", "\t", "\\\\\\\\\n")
`$0
\end{pmatrix}
endsnippet


# vim:ft=snippets:
